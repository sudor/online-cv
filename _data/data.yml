#
# Be aware that even a small syntax error here can lead to failures in output.
#

sidebar:
    about: True # set to False or comment line if you want to remove the "how to use?" in the sidebar
    education: True # set to False if you want education in main section instead of in sidebar

    # Profile information
    name: 郑启涛
    tagline: 测试开发工程师
    avatar: profile.png  #place a 100x100 picture inside /assets/images/ folder and provide the name of the file below

    # Sidebar links
    email: sudo.qt@gmail.com
#    phone: MTg1NzY2OTU3MjY=
    phone: 18576695726
    website:  #do not add http://
    linkedin: 1991年8月
    github: sudor
    gitlab:
    bitbucket:
    twitter:
    stack-overflow: # Number/Username, e.g. 123456/alandoe
    codewars:
    goodreads: 6年工作经验 # Number-Username, e.g. 123456-alandoe

    languages:
      - idiom: 英语
        level: 四级

    interests:
      - item: 看书 旅游 编程
        link:

career-profile:
    title: 个人简介
    summary: |
      1年功能测试经验，5年测开经验，主要致力于测试团队效能提升工作，在测试实践中提取测试痛点帮助测试团队使用技能手段提升测试效率与准确性，
      如工具平台、自动化测试平台、业务测试平台、监控平台、mock平台等。常用/设计技术栈: flask/django、celery、gunicorn、supervisor、docker等;
      前端技术栈: vue、ui-elelement、vcharts等; 中间件: jenkins、mysql、redis、rabbitmq等; 监控工具: flower、grafana、sentry等。
education:
    - degree: 本科学士
      university: 湖北武汉理工大学
      time: 2010 - 2014
      details:
experiences:
    - role: 测试开发工程师
      time: 2017-04 至今
      company: 深圳市小赢信息技术服务有限公司
      details: |
        负责公司测试团队测试效能、质量保障能力的提升工作；带领小组参与测试团队在公司技术体系的大中台建设，
        让测试技术充分应用于项目持续交付中。我们的工作目标是让测试更加高效、便捷、准确！我们的成果主要有:
        自动化测试平台、数据银行平台、业务测试平台、常用工具平台、mock平台、数据监控平台、接口测试平台、协作管理平台等;
    - role: 测试开发工程师
      time: 2015-06 至 2017-04
      company: 深圳市云之讯技术服务有限公司
      details: |
        负责公司互联网通讯项目如: 及时消息(IM)、视频通话(VOIP)、短信协议(SMS)、官网(WEB)、管理平台(WEB)等项目的自动化测试开发、
        负责测试团队效能工具开发，如短信发送客户端、及时消息客户端等; 积累了非常丰富的自动化测试开发经验、以及自动化测试框架开发经验；
    - role: 测试工程师
      time: 2014-06 至 2015-06
      company: 软通动力信息技术(集团)有限公司 (合作方, 深圳市华为海思半导体技术有限公司)
      details: |
        任职于智能电视(DTV)核心芯片研发项目组，主要从事linux图形驱动白盒测试(c++)、Android中间层(midleware)接口测试(java)、
        整机android多媒体模块自动化测试(python)；对敏捷开发、devops有了深刻的映像与实践经验;
projects:
    title: 项目经验
    intro: 此处仅罗列最新开发的重点项目.
    assignments:
      - title: 自动化测试平台项目
        tagline:
          - lights:
            - "1. 超高执行效率: 根据用例数量动态分配执行机并行执行, 几乎所有用例都将同时并行执行，效率提升 n * 100%！"
            - "2. 超精准覆盖率: 自动化用例与功能用例一对一一键关联, 各业务覆盖率数据精准展示！"
            - "3. 便捷开发模式: 仅需Python基础即可快速接入, 无需再学习其他模板语法！"
            - "4. 便捷同步方式: 线上线下用例数据多种同步方式, 省心又省力！"
            - "5. 便捷构建方式: 平台提供多种构建方式，满足不同构建需求, 如: 标签构建、定时构建、计划构建、历史构建、仅失败构建等等！"
            - "6. 高代码实时性: 测试代码提交后实时更新，无需进行各种发布操作."
            statistics:
              - "1. 平台研发耗时: 独立4个月研发完成并推广使用"
              - "2. 平台数据简要: 现共接入17个自动化测试项目，64位开发者接入，半年内共开发出2W+用例、发起构建3W+次、执行用例30W+,
                用例覆盖率在40%+，发现200+bug等，为业务测试平台发起3000+次需求构建，为协作管理平台提供4000+次环境可用性检测构建。"
            difficults:
              - "1. 在协程运行模式下, 如何收集用例并行执行的日志?"
              - "2. 在一次构建中, 部分用例需要串行执行如何解决?"
              - "3. 用例关联模式的如何确定, 1对1、1对多、多对1？"
              - "4. 线上线下如何保持用例数据同步？"
              - "5. 前端编辑参数时, BIG-INT类型数据如何展示以及存储？"
              - "6. 用例上下文参数如何传递以及识别？"
              - "7. 自动化测试驱动理论在线上以及线下实践区别？"
            technologies: "django celery gunicorn vue ui-element drf rf rabbimq redis mysql docker jenkins supervisor"
            summary: |
              为解决公司业务流程长、异步回调多、场景多样化等因素导致的自动化用例执行耗时长，易受干扰、且用例不易统计覆盖率等方面的问题，
              我们自研了一套自动化测试框架以及匹配的线上执行平台，该平台与业务测试平台以及协作管理平台无缝结合，可在需求测试、CI/CD流程、
              环境可用性检测等方面提供鼎力支持！

      - title: 数据银行平台项目
        tagline:
          - lights:
            - "1. 超大数据池: 数据取一造一，取之不尽用之不竭!"
            - "2. 超低成本接入: 复用自动化测试代码关键字，无需另外设计造数逻辑."
            - "3. 超快取数流程: 秒级取数效率，让开发与测试变成了\"负心汉\""
            - "4. 便捷的录入方式: 自动化用例执行逻辑一键生成造数任务，也可在前端自定义造数步骤."
            - "5. 多环境支持: 同种数据支持在不同环境构造数据"
            - "6. 告警与自运营: 构造失败经告警策略告警后在一定时间内自动尝试恢复造数."
            statistics:
              - "1. 平台研发耗时: 独立2个月研发完成并推广使用；"
              - "2. 平台数据简要: 半年内共开发200+种类数据，27位开发者接入，共生产数据32W+, 共被消费数据25W+, 日手动消费
              数据平均1000+条,日接口消费平均4000+条，半年统计造数效率提升30W+分钟；"
            difficults:
              - "1. 造数步骤中的关键数据如何识别？"
              - "2. 取数时没有数据如何解决？"
              - "3. 造数死循环的问题如何解决？"
            technologies: "django celery gunicorn vue ui-element drf rabbimq redis mysql docker jenkins supervisor"
            summary: |
              因公司业务复杂、流程长，在测试过程中构造一个前置数据可能需要几十分钟，且过程中经常受到环境问题或者其他同学修改配置导致数
              据构造失败，为了解决该问题亟需一个能够预先构造并存储大量数据的平台，因此数据银行平台应运而生！数据银行平台可通过录入造数
              任务在不同环境预先构造大量数据，且本着取一造一的原则对数据总量进行补偿，使得数据取之不尽用之不竭！
      - title: 线上数据监控平台项目
        tagline:
          - lights:
            - "1. 超清晰视角: 按实际业务需求参数并站在测试的角度监控线上数据的可靠性."
            - "2. 多样化接入方式: 提供代码接入模板以及前端页面模板接入方式，适配多样化监控逻辑."
            - "3. 超及时告警: 异常发生后秒级进入告警策略提供告警，告警方式分邮件、企业微信、短信等."
            - "4. 超清晰数据统计: 提供页面化的数据监控记录统计，帮助更好分析业务情况."
            statistics:
              - "1. 平台研发耗时:  2人1.5个月研发完成并推广使用；"
              - "2. 平台数据简要:  现共有800+任务数，共120+开发者接入，每次调度任务次数35000+-次，校验数据250W+-条/日，
              统计类告警300+次/日，数据异常类告警平均100+次/日. 共发现300+线上数据问题！"
            difficults:
              - "1. 线上数据库权限如何控制？"
              - "2. 如何实时更新任务代码？"
              - "3. 告警策略如何制定？"
            technologies: "flask celery gunicorn bootstrap rabbimq redis mysql jenkins supervisor"
            summary: |
              运营参数配置错误、开发夹带、测试漏测等线上事故发生了怎么办？不管如何要求研发流程规范，这类事故不可避免的会偶尔出现，
              尤其是在研发流程不规范的企业，发生此类事故时，因事故现象可能并不会导致触发运维告警以及数据分析告警，大部分情况都需
              要客户的问题反馈，因此不可避免地将给企业造成不可估量的损失！所以拥有一套站在测试的视角去监控线上业务正常运营的监控系统
              就非常必要了，为此我们设计了线上数据监控平台，其拥有高并发检测功能、丰富的告警策略、及时的告警能力、多样化的监控机制！

      - title: 业务接入能力工具集私库项目
        tagline:

          - lights:
            - "标准性与统一性: 由测开同学统一预研并适度封装工具接入方式，编写接入文档，统一维护，减少冗余开发量."
            statistics:
              - "所有测试同学在对接业务测试时均使用该工具库进行接入，实现了工具的统一性与标准性"
            difficults:
              - "1. 如何解决在办公环境下与测试环境隔离下的mysql、redis等的代码操作？"
              - "2. http请求在并行执行过程中如何维持登入态？"
              - "3. prtobuf协议如何同时支持多分支？"
            technologies: "jsonrpc、cmq、mysql、redis、cmpp、protobuf、http ++"
            summary: |
              因公司业务复杂度较高，涉及的协议、中间件、工具也较多，需要protobuf、cmpp、cmq、apollo等多达20多种工具，
              研究此类工具在Python中的用法需要不少时间，如果人手一套接入代码，那么冗余开发量就会很大，极大影响工作效率，
              因此我们为公司业务的接入能力量身打造了一个基于Python语言的私库，所有测试同学均采用该私库进行脚本、自动化、
              监控等的代码逻辑的编写。
#publications:
#    title: Publications
#    intro: |
#      You can list your publications in this section. Lorem ipsum dolor sit
#      amet, consectetur adipiscing elit. Vestibulum et ligula in nunc
#      bibendum fringilla a eu lectus.
#    papers:
#      - title: The Art of Computer Programming
#        link: "#"
#        authors: Donald E. Knuth
#        conference: Addison-Wesley, 1968
#
#      - title: "Genetic Programming III: Darwinian Invention &amp; Problem Solving"
#        link: "#"
#        authors: Koza, J.R., Andre, D., Bennett, F.H., Keane, M.A.
#        conference: "Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 1st edn. (1999)"
#
#      - title: A syntax directed compiler for Algol 60
#        link: "#"
#        authors: Edgar T. Irons
#        conference: "Comm. ACM 4 (1961), 51–55"

skills:
    title: 技能 &amp; 熟练程度

    toolset:
      - name: Python
        level: 90%

      - name: Django & flask & celery
        level: 85%

      - name: Vue & ui-element
        level: 80%

      - name: Java
        level: 40%

footer: >
    Designed with <i class="fas fa-heart"></i> by <a href="https://sudor.github.io/online-cv/" rel="nofollow">kitar.zheng</a>
